{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?0f16","webpack:///../common/src/result.ts","webpack:///../common/src/session-view-info.ts","webpack:///./src/assets/indysoft-logo.svg","webpack:///../common/src/user.ts","webpack:///../common/src/bench-configuration.ts","webpack:///./src/utils/uuid.ts","webpack:///../common/src/driver-builder/index.ts","webpack:///./src/App.vue?78f3","webpack:///./src/App.vue?ec60","webpack:///./src/App.vue?4dbd","webpack:///./src/App.vue?4195","webpack:///./src/router/index.ts","webpack:///./src/plugins/vuetify.ts","webpack:///./src/store/driver-builder.ts","webpack:///./src/utils/index.ts","webpack:///./src/store/index.ts","webpack:///./src/utils/Ipc.ts","webpack:///./src/main.ts","webpack:///../common/src/auto-update.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","IpcChannels","getAllBasicInfosForCurrentSession","response","getResultsForRun","runStarted","runStopped","resultAdded","CommunicationInterfaceTypes","DefaultTiming","connectTimeout","readTimeout","writeTimeout","generateUuid","Types","ObjectId","toHexString","communicationInterface","getLibrary","setLibrary","saveDriver","getDriver","getDriverIdentityInfos","getDriverCategories","getStatus","connect","disconnect","write","read","queryString","IEEE4882MandatedCommands","_id","command","postParameters","prompt","beforeText","responseDataType","SCPIRequiredCommands","STORE_UPDATED","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","staticStyle","_v","_s","procedureName","_e","model","callback","$$v","darkMode","expression","isRunningInVisualCal","staticRenderFns","info","ipc","electron","$store","direct","getters","commit","setDarkMode","$route","state","sessionViewInfo","procedure","component","VApp","VAppBar","VImg","VMain","VSpacer","VSwitch","use","routes","path","router","base","icons","iconfont","employeesModule","namespaced","instructions","instructionSets","categories","drivers","currentDriver","driverManufacturer","driverModel","driverNomenclature","terminator","identityQueryCommand","variables","communicationInterfaceInfos","selectedCommunicationInterfaceInfo","deviceGpibAddress","isSelectedCommunicationInterfaceConnected","onlineStore","isSelectedInterfaceGpib","args","toLocaleUpperCase","includes","library","mutations","forEach","driver","instructionSet","instruction","oldInstructionWithParameters","parameters","setInstructions","setCurrentDriver","driverString","JSON","stringify","parse","setManufacturer","setModel","setNomenclature","setIdentityQueryCommand","setTerminator","setInstructionSets","addDriverInstructionSet","newInstructionSet","removeDriverInstructionSet","id","setIndex","findIndex","addNewDriverInstructionToSet","opts","find","instructionSetId","newInstruction","updateDriverInstructionFromInstructionSet","instructionIndex","removeDriverInstructionFromInstructionSet","instructionId","setDriverInstructionSetInstructionCommandPreParameters","preParameters","setDriverInstructionSetInstructionCommandPostParameters","setInstructionSetInstructionsOrder","renameInstructionSet","newName","setCommunicationInterfaceInfos","setSelectedCommunicationInterfaceInfo","setDeviceGpibAddress","setIsSelectedCommunicationInterfaceConnected","saveInstructionSetToLibrary","existingInstructionSetIndex","removeInstructionSetFromLibrary","removeDriverFromLibrary","existingDriverIndex","addOrReplaceDriverInLibrary","setOnlineStore","setCurrentDriverCategories","clearCurrentDriver","setCurrentDriverVariables","actions","init","context","dispatch","ipcRenderer","on","_","alert","refreshCommunicationInterfaceInfos","initCommunicationInterfaces","refreshLibrary","initSocketIo","once","send","pingTimer","storeSocket","connectionTimeout","maxRetries","Infinity","startClosed","onopen","setInterval","onclose","clearInterval","onmessage","ev","refreshOnlineStore","status","isConnected","communicationInterfaceName","getCurrentUser","currentUser","getViewInfo","viewInfo","session","configuration","benchConfigName","benchConfig","benchConfigs","b","interfaces","saveLibrary","removeAllListeners","parameterArguments","argument","parameter","afterText","TextEncoder","encode","saveCurrentDriver","saveDriverToStore","post","moduleGetterContext","moduleActionContext","isDev","strict","driverBuilder","user","selectedSection","selectedAction","isLoggedIn","sessions","activeSession","activeBenchConfig","framework","theme","dark","userPreset","setUser","setViewInfo","setSessionViewInfo","sections","firstSection","setSelectedSection","setSelectedAction","refreshViewInfo","rootActionContext","refreshSessionViewInfo","getSessionViewInfo","login","credentials","store","rootGetterContext","channel","requestChannel","responseChannel","errorChannel","Request","Response","email","sessionName","GetSerialPortsRequest","GetSerialPortsResponse","GetSerialPortsError","configs","SaveConfigsForCurrentUserRequest","SaveConfigsForCurrentUserResponse","SaveConfigsForCurrentUserError","DownloadProgressChanged","progress","emit","StartedChecking","UpdateAvailable","UpdateDownloaded","UpdateNotAvailable","config","productionTip","a","app","original","vuetify","render","h","$mount"],"mappings":"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","file":"js/app.c1832d7f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"view-auto-update~view-bench-config~view-login~view-procedure-create~view-procedure-loading-services~~bc2372fd\":\"view-auto-update~view-bench-config~view-login~view-procedure-create~view-procedure-loading-services~~bc2372fd\",\"view-auto-update\":\"view-auto-update\",\"view-bench-config~view-gridstack-test~view-procedure-select~view-results~view-session~view-session-select\":\"view-bench-config~view-gridstack-test~view-procedure-select~view-results~view-session~view-session-select\",\"view-bench-config~view-login~view-procedure-create~view-results~view-session~view-session-create\":\"view-bench-config~view-login~view-procedure-create~view-results~view-session~view-session-create\",\"view-bench-config~view-results~view-session\":\"view-bench-config~view-results~view-session\",\"view-bench-config\":\"view-bench-config\",\"view-results\":\"view-results\",\"view-session\":\"view-session\",\"view-procedure-select\":\"view-procedure-select\",\"view-session-select\":\"view-session-select\",\"view-login\":\"view-login\",\"view-procedure-create\":\"view-procedure-create\",\"view-session-create\":\"view-session-create\",\"view-procedure-loading-services\":\"view-procedure-loading-services\",\"view-gridstack-test\":\"view-gridstack-test\",\"view-no-route\":\"view-no-route\"}[chunkId]||chunkId) + \".\" + {\"view-auto-update~view-bench-config~view-login~view-procedure-create~view-procedure-loading-services~~bc2372fd\":\"f113ed2e\",\"view-auto-update\":\"97b67aca\",\"view-bench-config~view-gridstack-test~view-procedure-select~view-results~view-session~view-session-select\":\"edf35b81\",\"view-bench-config~view-login~view-procedure-create~view-results~view-session~view-session-create\":\"9dc159b2\",\"view-bench-config~view-results~view-session\":\"2b52b9ac\",\"view-bench-config\":\"c13b98e8\",\"view-results\":\"7b61a484\",\"view-session\":\"16582455\",\"view-procedure-select\":\"a03a004d\",\"view-session-select\":\"4322d93d\",\"view-login\":\"9ae63bff\",\"view-procedure-create\":\"260ef874\",\"view-session-create\":\"e216ebaf\",\"view-procedure-loading-services\":\"2a58d347\",\"view-gridstack-test\":\"35fe313d\",\"view-no-route\":\"ca1cbecd\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"view-auto-update~view-bench-config~view-login~view-procedure-create~view-procedure-loading-services~~bc2372fd\":1,\"view-auto-update\":1,\"view-bench-config~view-login~view-procedure-create~view-results~view-session~view-session-create\":1,\"view-bench-config~view-results~view-session\":1,\"view-bench-config\":1,\"view-results\":1,\"view-procedure-select\":1,\"view-session-select\":1,\"view-login\":1,\"view-procedure-create\":1,\"view-session-create\":1,\"view-gridstack-test\":1,\"view-no-route\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({\"view-auto-update~view-bench-config~view-login~view-procedure-create~view-procedure-loading-services~~bc2372fd\":\"view-auto-update~view-bench-config~view-login~view-procedure-create~view-procedure-loading-services~~bc2372fd\",\"view-auto-update\":\"view-auto-update\",\"view-bench-config~view-gridstack-test~view-procedure-select~view-results~view-session~view-session-select\":\"view-bench-config~view-gridstack-test~view-procedure-select~view-results~view-session~view-session-select\",\"view-bench-config~view-login~view-procedure-create~view-results~view-session~view-session-create\":\"view-bench-config~view-login~view-procedure-create~view-results~view-session~view-session-create\",\"view-bench-config~view-results~view-session\":\"view-bench-config~view-results~view-session\",\"view-bench-config\":\"view-bench-config\",\"view-results\":\"view-results\",\"view-session\":\"view-session\",\"view-procedure-select\":\"view-procedure-select\",\"view-session-select\":\"view-session-select\",\"view-login\":\"view-login\",\"view-procedure-create\":\"view-procedure-create\",\"view-session-create\":\"view-session-create\",\"view-procedure-loading-services\":\"view-procedure-loading-services\",\"view-gridstack-test\":\"view-gridstack-test\",\"view-no-route\":\"view-no-route\"}[chunkId]||chunkId) + \".\" + {\"view-auto-update~view-bench-config~view-login~view-procedure-create~view-procedure-loading-services~~bc2372fd\":\"85e964b6\",\"view-auto-update\":\"e1bfe24a\",\"view-bench-config~view-gridstack-test~view-procedure-select~view-results~view-session~view-session-select\":\"31d6cfe0\",\"view-bench-config~view-login~view-procedure-create~view-results~view-session~view-session-create\":\"d95c43eb\",\"view-bench-config~view-results~view-session\":\"9ef34524\",\"view-bench-config\":\"5cad680f\",\"view-results\":\"561ff576\",\"view-session\":\"31d6cfe0\",\"view-procedure-select\":\"f4ddb8ba\",\"view-session-select\":\"f4ddb8ba\",\"view-login\":\"28d4abce\",\"view-procedure-create\":\"28d4abce\",\"view-session-create\":\"28d4abce\",\"view-procedure-loading-services\":\"31d6cfe0\",\"view-gridstack-test\":\"70135bc0\",\"view-no-route\":\"85e964b6\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/vue/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","export const IpcChannels = {\n  getAllBasicInfosForCurrentSession: {\n    request: 'getAllBasicInfosForCurrentSession-runs-request',\n    response: 'getAllBasicInfosForCurrentSession-runs-response',\n    error: 'getAllBasicInfosForCurrentSession-runs-error'\n  },\n  getResultsForRun: {\n    request: 'getResultsForRun-request',\n    response: 'getResultsForRun-response',\n    error: 'getResultsForRun-error'\n  },\n  runStarted: 'run-started',\n  runStopped: 'run-stopped',\n  resultAdded: 'run-result-added'\n}\n\nexport interface Measurement<TRaw> {\n  raw: TRaw;\n}\n\nexport interface NumericMeasurement<TRaw, TValue> extends Measurement<TRaw> {\n  raw: TRaw;\n  value: TValue;\n}\n\nexport interface LogicResultPassedCallback {\n  (): boolean;\n}\n\ninterface LogicAction {\n  type: string;\n  source: string;\n  section: string;\n  action: string;\n}\n\nexport interface LogicResult<TRaw, TValue> {\n  id: string;\n  runId: string;\n  type: string;\n  description: string;\n  timestamp: Date;\n  baseQuantity?: string;\n  derivedQuantity?: string;\n  derivedQuantityPrefix?: string;\n  minimum: number;\n  maximum: number;\n  inputLevel: TValue;\n  rawValue: TRaw;\n  measuredValue: TValue;\n  passed: boolean;\n}\n\ninterface Note {\n  id: string;\n  enteredBy: string;\n  comment: string;\n}\n\nexport interface LogicRunBasicInfo {\n  id: string;\n  sessionId: string;\n  sectionId: string;\n  actionId: string;\n  startTimestamp: Date;\n  stopTimestamp?: Date;\n  description: string;\n  isCompleted?: boolean;\n  notes?: Note[];\n}\n\nexport interface CommInterfaceLogEntry {\n  id?: string;\n  timestamp?: Date,\n  interfaceName: string;\n  message: string;\n  error?: Error | string;\n  data?: ArrayBuffer | string | number;\n  deviceName?: string;\n}\n\nexport interface LogicRun<TRaw, TValue> extends LogicRunBasicInfo {\n  results: LogicResult<TRaw, TValue>[];\n  communicationLogEntries?: CommInterfaceLogEntry[];\n}\n","/*eslint-env es6*/\n\nexport const enum IpcChannels {\n  Request = 'vue-session-view-info-request',\n  Response = 'vue-session-view-info-response',\n  Error = 'vue-session-view-info-error'\n};\n\nexport interface Author {\n  nameFirst: string;\n  nameLast: string;\n  email?: string;\n}\n\nexport interface ProcedureAction {\n  name: string;\n  lastRun?: Date;\n}\n\nexport interface ProcedureSection {\n  name: string;\n  actions: ProcedureAction[];\n}\n\nexport interface Procedure {\n  name: string;\n  authorOrganization: string;\n  authors?: Author[];\n  sections: ProcedureSection[];\n}\n\nexport interface Session {\n  name: string;\n  procedureName: string;\n  email: string;\n}\n\nexport interface AvailableInterfaceDriver {\n  name: string;\n}\n\nexport interface AvailableDeviceDriver {\n  name: string;\n}\n\nexport interface CommunicationInterface {\n  name: string;\n}\n\nexport interface Device {\n  name: string;\n  selectedDeviceDriverName?: string;\n  selectedCommunicationInterfaceName?: string;\n  gpibAddress?: number;\n  isGpib?: boolean;\n}\n\nexport interface SessionViewRequestResponseInfo {\n  procedure: Procedure;\n  communication?: {\n    devices: Device[];\n    interfaces: CommunicationInterface[];\n    availableDeviceDrivers: AvailableDeviceDriver[];\n    availableInterfaceDrivers: AvailableInterfaceDriver[];\n  };\n}\n","module.exports = __webpack_public_path__ + \"img/indysoft-logo.7d6e4e00.svg\";","// eslint-disable-next-line\nexport const enum IpcChannels {\n  Request = 'user-login-request',\n  Response = 'user-login-response',\n  Error = 'user-login-error'\n};\n\nexport interface LoginCredentials {\n  username: string;\n  password: string;\n}\n","// eslint-disable-next-line\nexport const enum IpcChannels {\n  GetSerialPortsRequest = 'get-serial-ports-request',\n  GetSerialPortsResponse = 'get-serial-ports-response',\n  GetSerialPortsError = 'get-serial-ports-error',\n  SaveConfigsForCurrentUserRequest = 'save-bench-configs-for-current-user-request',\n  SaveConfigsForCurrentUserResponse = 'save-bench-configs-for-current-user-response',\n  SaveConfigsForCurrentUserError = 'save-bench-configs-for-current-user-error',\n  Updated = 'bench-configs-for-current-user-updated'\n}\n\nexport type CommunicationInterfaceType = 'National Instruments GPIB' | 'Prologix GPIB TCP' | 'Prologix GPIB USB' | 'Serial Port' | 'Emulated';\n\nexport const CommunicationInterfaceTypes = [\n  'National Instruments GPIB',\n  'Prologix GPIB TCP',\n  'Prologix GPIB USB',\n  'Serial Port',\n  'Emulated'\n]\n\ninterface TcpConfiguration {\n  host: string;\n  port: number;\n}\n\ninterface NationalInstrumentsGpibConfiguration {\n  address: number;\n}\n\ninterface SerialPortConfiguration {\n  port: string;\n  baudRate: number;\n}\n\ninterface Timing {\n  connectTimeout: number;\n  readTimeout: number;\n  writeTimeout: number;\n  delayBeforeWrite?: number;\n  delayAfterWrite?: number;\n  delayBeforeRead?: number;\n  delayAfterRead?: number;\n}\n\nexport const DefaultTiming: Timing = {\n  connectTimeout: 3000,\n  readTimeout: 3000,\n  writeTimeout: 3000\n}\n\nexport interface CommunicationInterfaceConfigurationInfo {\n  name: string;\n  type: CommunicationInterfaceType;\n  nationalInstrumentsGpib?: NationalInstrumentsGpibConfiguration;\n  tcp?: TcpConfiguration;\n  serial?: SerialPortConfiguration;\n  timing: Timing;\n  resetOnConnect?: boolean;\n}\n\nexport interface BenchConfig {\n  name: string;\n  username: string;\n  interfaces: CommunicationInterfaceConfigurationInfo[];\n}\n","import mongoose from 'mongoose';\n\nexport const generateUuid = () => {\n  return mongoose.Types.ObjectId().toHexString();\n}\n","import mongoose from 'mongoose';\n\nexport const IpcChannels = {\n  communicationInterface: {\n    getLibrary: {\n      request: 'driver-builder-get-library-request',\n      response: 'driver-builder-get-library-response',\n      error: 'driver-builder-get-library-error'\n    },\n    setLibrary: {\n      request: 'driver-builder-set-library-request',\n      response: 'driver-builder-set-library-response',\n      error: 'driver-builder-set-library-error'\n    },\n    saveDriver: {\n      request: 'driver-builder-save-driver-request',\n      response: 'driver-builder-save-driver-response',\n      error: 'driver-builder-save-driver-error'\n    },\n    getDriver: {\n      request: 'driver-builder-get-driver-request',\n      response: 'driver-builder-get-driver-response',\n      error: 'driver-builder-get-driver-error'\n    },\n    getDriverIdentityInfos: {\n      request: 'driver-builder-get-driver-identity-infos-request',\n      response: 'driver-builder-get-driver-identity-infos-response',\n      error: 'driver-builder-get-driver-identity-infos-error'\n    },\n    getDriverCategories: {\n      request: 'driver-builder-get-driver-categories--request',\n      response: 'driver-builder-get-driver-categories--request',\n      error: 'driver-builder-get-driver-categories--request'\n    },\n    getStatus: {\n      request: 'driver-builder-get-status-request',\n      response: 'driver-builder-get-status-response',\n      error: 'driver-builder-get-status-error'\n    },\n    connect: {\n      request: 'driver-builder-iface-connect-request',\n      response: 'driver-builder-iface-connect-response',\n      error: 'driver-builder-iface-connect-error'\n    },\n    disconnect: {\n      request: 'driver-builder-iface-disconnect-request',\n      response: 'driver-builder-iface-disconnect-response',\n      error: 'driver-builder-iface-disconnect-error'\n    },\n    write: {\n      request: 'driver-builder-iface-write-request',\n      response: 'driver-builder-iface-write-response',\n      error: 'driver-builder-iface-write-error'\n    },\n    read: {\n      request: 'driver-builder-iface-read-request',\n      response: 'driver-builder-iface-read-response',\n      error: 'driver-builder-iface-read-error'\n    },\n    queryString: {\n      request: 'driver-builder-iface-query-string-request',\n      response: 'driver-builder-iface-query-string-response',\n      error: 'driver-builder-iface-query-string-error'\n    }\n  }\n}\n\nexport type InstructionType = 'Read' | 'Write' | 'Query' | 'setVariable';\nexport type DataType = 'Boolean' | 'Number' | 'String' | 'Binary';\nexport type InstructionParameterType = 'boolean' | 'number' | 'string' | 'list' | 'readResponse' | 'variable';\nexport type CommandParameterType = 'pre' | 'post';\n\nexport interface DriverCategory {\n  _id: string;\n  name: string;\n  instructionSets: string[];\n}\n\nexport interface Library {\n  drivers: Driver[];\n  instructionSets: InstructionSet[];\n  instructions: Instruction[];\n  categories: DriverCategory[];\n}\n\nexport interface Status {\n  communicationInterfaceName?: string;\n  isConnected: boolean;\n}\n\nexport interface CommunicationInterfaceActionInfo {\n  deviceGpibAddress?: number;\n  delayBefore?: number;\n  delayAfter?: number;\n  terminator?: string;\n}\n\nexport interface WriteInfo extends CommunicationInterfaceActionInfo {\n  data: ArrayBufferLike;\n}\n\nexport interface QueryStringInfo extends CommunicationInterfaceActionInfo {\n  data: string;\n}\n\n/** An item for a command parameter when its type is set to \"list\" */\nexport interface CommandParameterListItem {\n  _id: string;\n  text: string;\n  value: string;\n}\n\n/** Represents a text segment of a command (i.e. the main body of the command or an parameter).  The final command will be assembled from these parts.  Note that the main part must exist, and only one main part can exist. */\nexport interface CommandParameter {\n  _id: string;\n  /** The parameter type.  This determines what is shown to the procedure developer when editing the node that represents it. */\n  type: InstructionParameterType;\n  /** The prompt to show the procedure developer for this parameter when editing the node that represents it. */\n  prompt: string;\n  /** Characters to be prepend to the text property.  This is intented to be used for separating parameters from the main part and from other parameters. */\n  beforeText?: string;\n  /** Characters to be appended to the text property.  This is intented to be used for separating parameters from the main part and from other parameters. */\n  afterText?: string;\n  /** Whether or not this part is required.  Only used if type is parameter. */\n  required?: boolean;\n  /** When this parameter's type is set to list, these are the items that will be used for the options available to the user. */\n  listItems?: CommandParameterListItem[];\n  /** When this parameter's type is set to boolean, this is the value that will be combined with the command when the argument is true. */\n  trueValue?: string;\n  /** When this parameter's type is set to boolean, this is the value that will be combined with the command when the argument is false. */\n  falseValue?: string;\n  /** Whether or not to force a minimum value when the parameter's type is set to number. */\n  useMin?: boolean;\n  /** Whether or not to force a maximum value when the parameter's type is set to number. */\n  useMax?: boolean;\n  /** When this parameter's type is set to number, this is the value that will be the minimum number allowed for input. */\n  min?: number;\n  /** When this parameter's type is set to number, this is the value that will be the maximum number allowed for input. */\n  max?: number;\n  /** Whether or not to use the increment. */\n  useMinMaxIncrement?: boolean;\n  /** The increment allowed between min and max. */\n  minMaxIncrement?: number;\n  /** The optional default value. */\n  default?: string | number | boolean;\n  /** The optional read response tag used as this parameters value */\n  readResponseTag?: string;\n  /** The optional variable used as this parameters value */\n  variableName?: string;\n}\n\n/** A CommandParameter argument that will be sent along with the command to the device. */\nexport interface CommandParameterArgument {\n  parameter: CommandParameter;\n  value: string | boolean | number;\n}\n\n/** An instruction, or command, that is sent to a device during a write or query.  The Instruction interface is intended for use with command templates.  See CustomInstruction for use when implementing the actual command in the builder. */\nexport interface Instruction {\n  _id: string;\n  /** The position this instruction exists in an InstructionSet. */\n  order?: number;\n  /** The name for this instruction.  This helps differentiate one instruction from another when used in the same instruction set. */\n  name: string;\n  description?: string;\n  /** The instruction type.  This determines if we are only writing data to the device, reading from the device, or both. */\n  type: InstructionType;\n  /** Expected data type returned from a read or query. */\n  responseDataType?: DataType;\n  /** Number of failed reads before throwing an error. */\n  readAttempts?: number;\n  /** Name used to tag the response from a read or query, to be used by other instructions that follow this one. */\n  responseName?: string;\n  /** Length of time, in milliseconds, to delay before invoking this instruction. */\n  delayBefore?: number;\n  /** Length of time, in milliseconds, to delay after invoking this instruction. */\n  delayAfter?: number;\n  /** A URI/URL of a help document or webpage that contains information about this instruction. */\n  helpUri?: string;\n  /** The command that is sent to the device, without parameters. */\n  command: string;\n  /** The optional pre-command parameters that are sent along with the command.  Parameters help define how the node UI is generated and presented to the procedure developer. */\n  preParameters?: CommandParameter[];\n  /** The optional post-command parameters that are sent along with the command.  Parameters help define how the node UI is generated and presented to the procedure developer. */\n  postParameters?: CommandParameter[];\n}\n\n/** Instructions mandated by IEEE 488.2 and SCPI */\nexport const IEEE4882MandatedCommands: Instruction[] = [\n  { _id: '524afd49-7a68-47aa-8f30-3ad68c3466f0', name: 'Clear Status Command', type: 'Write', command: '*CLS' },\n  { _id: 'b345a42a-1661-42a4-acd8-6a1e6f9d17f7', name: 'Standard Event Status Enable Command', type: 'Write', command: '*ESE', postParameters: [{ _id: '0be8ab1e-a8fe-4a9b-a9e0-70131d7998de', type: 'number', prompt: 'Event status value?', beforeText: ' ' }] },\n  { _id: '96b52d35-b46b-4e5e-94ad-49ebaae34b5e', name: 'Standard Event Status Enable Query', type: 'Query', command: '*ESE?', responseDataType: 'Number' },\n  { _id: '61b8b79a-1b18-47e6-b2de-93772c7562da', name: 'Standard Event Status Register Query', type: 'Query', command: '*ESR?', responseDataType: 'Number' },\n  { _id: '4caa1e38-6641-4781-b63b-e303b24577c6', name: 'Identification Query', type: 'Query', command: '*IDN?', responseDataType: 'String' },\n  { _id: '5a7821d5-bcad-44fe-958d-e5edcc90ee6d', name: 'Operation Complete Command', type: 'Write', command: '*OPC' },\n  { _id: '6d37157d-53ac-49dd-b930-e51de3042d11', name: 'Operation Complete Query', type: 'Query', command: '*OPC?', responseDataType: 'Boolean' },\n  { _id: '232934f6-5832-4f9b-99bd-93c316bd7ca6', name: 'Reset Command', type: 'Write', command: '*RST' },\n  { _id: '750e25a6-c3b5-484d-8bc8-92c47ac62b85', name: 'Service Request Enable Command', type: 'Write', command: '*SRE', postParameters: [{ _id: '9f0f191d-1ad4-4628-833f-370611eb6ff2', type: 'number', prompt: 'Service enable value?', beforeText: ' ' }] },\n  { _id: 'e6bc632a-864f-4d7e-a64d-b2abbb5cd46e', name: 'Service Request Enable Query', type: 'Query', command: '*SRE?', responseDataType: 'Number' },\n  { _id: 'a3be687b-56f4-415f-8751-d346d85f0a4c', name: 'Read Status Byte Query', type: 'Query', command: '*STB?', responseDataType: 'Number' },\n  { _id: 'e6e36956-d36b-47e0-99d2-07f5f8c3c48c', name: 'Self-Test Query', type: 'Query', command: '*TST?', responseDataType: 'Number' },\n  { _id: 'f7019a3c-d33c-4007-afcd-5abadd9bd3a4', name: 'Wait-to-Continue Command', type: 'Write', command: '*WAI' }\n];\n\n/** Instructions required by SCPI */\nexport const SCPIRequiredCommands: Instruction[] = [\n  { _id: 'faa3d671-213a-4e21-82f4-5c60644be34a', name: 'System Error Query', type: 'Query', command: 'SYSTem:ERRor?', responseDataType: 'String' },\n  { _id: 'b3a43737-1968-4b69-8532-2adbaabb7ea4', name: 'System Version Query', type: 'Query', command: 'SYSTem:VERSion?', responseDataType: 'String' },\n  { _id: 'aed334e4-9fcd-4b08-bac6-7e1e0f193761', name: 'Status Operation Event Query', type: 'Query', command: 'STATus:OPERation:EVENt?', responseDataType: 'Number' },\n  { _id: '85cdcc7a-f3fc-435f-98b2-5db8cab00f5c', name: 'Status Operation Condition Query', type: 'Query', command: 'STATus:OPERation:CONDition?', responseDataType: 'Number' },\n  { _id: 'cce0e9b2-340b-4b60-b1af-5b1efa6582a6', name: 'Status Operation Enable Command', type: 'Write', command: 'STATus:OPERation:ENABle', postParameters: [{ _id: '72663b5a-3035-4a55-9142-4004af9ec4cf', type: 'number', prompt: 'Operation status value?', beforeText: ' ' }] },\n  { _id: '6f41f82a-94cc-4530-bc9a-7fdfbf3dff08', name: 'Status Operation Enable Query', type: 'Query', command: 'STATus:OPERation:ENABle?', responseDataType: 'Number' },\n  { _id: '76569773-162a-4021-baee-e8ea6d2d5fd8', name: 'Status Questionable Event Query', type: 'Query', command: 'STATus:QUEStionable:EVENt?', responseDataType: 'Number' },\n  { _id: '263b4eeb-5f3e-42c7-bdda-602ce36253ee', name: 'Status Questionable Condition Query', type: 'Query', command: 'STATus:QUEStionable:CONDition?', responseDataType: 'Number' },\n  { _id: 'e8df7e5a-0b4b-49ab-a7b0-f5a9dd3da3a3', name: 'Status Questionable Enable Command', type: 'Write', command: 'STATus:QUEStionable:ENABle', postParameters: [{ _id: 'ae1a7724-0b60-4326-93dd-5121fd29d4f1', type: 'number', prompt: 'Questionable status value?', beforeText: ' ' }] },\n  { _id: 'a2174281-7a9e-41b4-97ec-01da025a291c', name: 'Status Questionable Enable Query', type: 'Query', command: 'STATus:QUEStionable:ENABle?', responseDataType: 'Number' },\n  { _id: 'be4fd43b-5149-40fa-86ad-cb30b4d48fa1', name: 'Status Preset Command', type: 'Write', command: 'STATus:PRESet' }\n];\n\nexport interface InstructionSet {\n  _id: string;\n  name: string;\n  instructions: Instruction[];\n}\n\nexport interface DriverVariable {\n  _id: string;\n  name: string;\n  defaultValue: string;\n}\n\nexport interface Driver {\n  driverManufacturer: string;\n  driverModel: string;\n  driverNomenclature: string;\n  identityQueryCommand?: string;\n  terminator: string;\n  instructionSets: InstructionSet[],\n  categories?: string[];\n  variables?: DriverVariable[];\n}\n\nexport type StoreDriver = Driver & mongoose.Document;\nexport type StoreInstructionSet = InstructionSet & mongoose.Document;\nexport type StoreInstruction = Instruction & mongoose.Document;\nexport type StoreCommandParameter = CommandParameter & mongoose.Document;\nexport type StoreCommandParameterListItem = CommandParameterListItem & mongoose.Document;\nexport type StoreDriverCategory = DriverCategory & mongoose.Document;\nexport type StoreDriverVariable = DriverVariable & mongoose.Document;\n\nexport const STORE_UPDATED = 'STORE-UPDATED';","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-app',{staticClass:\"full-height no-scroll\"},[(_vm.showAppBar)?_c('v-app-bar',{attrs:{\"app\":\"\",\"color\":\"primary\",\"dark\":\"\"}},[_c('div',{staticClass:\"d-flex align-center\"},[_c('v-img',{staticClass:\"shrink mt-1 hidden-sm-and-down\",staticStyle:{\"margin-right\":\"5px\"},attrs:{\"alt\":\"IndySoft\",\"contain\":\"\",\"min-width\":\"100\",\"src\":require(\"@/assets/indysoft-logo.svg\"),\"width\":\"100\"}}),_c('h3',[_vm._v(\"VisualCal\")])],1),_c('v-spacer'),(_vm.procedureName)?_c('h3',[_vm._v(\" Procedure: \"+_vm._s(_vm.procedureName)+\" \")]):_vm._e(),_c('v-spacer'),_c('v-switch',{attrs:{\"label\":\"Dark mode\"},model:{value:(_vm.darkMode),callback:function ($$v) {_vm.darkMode=$$v},expression:\"darkMode\"}})],1):_vm._e(),_c('v-main',[(!_vm.isRunningInVisualCal)?_c('h1',{staticClass:\"text-center red\"},[_vm._v(\"Not running in VisualCal\")]):_vm._e(),_c('router-view')],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue, Component } from 'vue-property-decorator';\nimport \"tabulator-tables/dist/css/tabulator.min.css\"; //import Tabulator stylesheet\n\n@Component\nexport default class App extends Vue {\n\n  get isRunningInVisualCal() { return window.electron !== undefined; }\n\n  get darkMode() { return this.$store.direct.getters.darkMode; }\n  set darkMode(value: boolean) { this.$store.direct.commit.setDarkMode(value); }\n\n  get showAppBar() { return this.$route.name === 'Session'; }\n\n  get procedureName() {\n    if (!this.$store.direct.state.sessionViewInfo || !this.$store.direct.state.sessionViewInfo.procedure) return '';\n    return this.$store.direct.state.sessionViewInfo.procedure.name;\n  }\n\n  mounted() {\n    // (document.getElementsByTagName('html')[0].style.overflowY = 'hidden');\n    if (this.isRunningInVisualCal) return;\n    console.error('Not running in VisualCal');\n    console.info(window.ipc);\n  }\n\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=52d43050&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VApp } from 'vuetify/lib/components/VApp';\nimport { VAppBar } from 'vuetify/lib/components/VAppBar';\nimport { VImg } from 'vuetify/lib/components/VImg';\nimport { VMain } from 'vuetify/lib/components/VMain';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VSwitch } from 'vuetify/lib/components/VSwitch';\ninstallComponents(component, {VApp,VAppBar,VImg,VMain,VSpacer,VSwitch})\n","import Vue from 'vue';\nimport VueRouter, { RouteConfig } from 'vue-router';\n\nVue.use(VueRouter);\n\nconst routes: Array<RouteConfig> = [\n  {\n    path: '/session',\n    name: 'Session',\n    component: () => import(/* webpackChunkName: \"view-session\" */ '@/views/session/View.vue')\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    component: () => import(/* webpackChunkName: \"view-login\" */ '@/views/Login.vue')\n  },\n  {\n    path: '/procedure-select',\n    name: 'ProcedureSelect',\n    component: () => import(/* webpackChunkName: \"view-procedure-select\" */ '@/views/procedure/Select.vue')\n  },\n  {\n    path: '/procedure-create',\n    name: 'ProcedureCreate',\n    component: () => import(/* webpackChunkName: \"view-procedure-create\" */ '@/views/procedure/Create.vue')\n  },\n  {\n    path: '/procedure-loading-services',\n    name: 'ProcedureLoadingServices',\n    component: () => import(/* webpackChunkName: \"view-procedure-loading-services\" */ '@/views/procedure/LoadingServices.vue')\n  },\n  {\n    path: '/session-select',\n    name: 'SessionSelect',\n    component: () => import(/* webpackChunkName: \"view-session-select\" */ '@/views/session/Select.vue')\n  },\n  {\n    path: '/session-create',\n    name: 'SessionCreate',\n    component: () => import(/* webpackChunkName: \"view-session-create\" */ '@/views/session/Create.vue')\n  },\n  {\n    path: '/auto-update',\n    name: 'AutoUpdate',\n    component: () => import(/* webpackChunkName: \"view-auto-update\" */ '@/views/AutoUpdate.vue')\n  },\n  {\n    path: '/bench-config-editor',\n    name: 'BenchConfigEditor',\n    component: () => import(/* webpackChunkName: \"view-bench-config\" */ '@/views/BenchConfigEditor.vue')\n  },\n  {\n    path: '/results',\n    name: 'Results',\n    component: () => import(/* webpackChunkName: \"view-results\" */ '@/views/Results.vue')\n  },\n  {\n    path: '/driver-builder',\n    name: 'DriverBuilder',\n    component: () => import(/* webpackChunkName: \"view-results\" */ '@/views/DriverBuilder.vue')\n  },\n  {\n    path: '/gridstacktest',\n    name: 'GridStackTest',\n    component: () => import(/* webpackChunkName: \"view-gridstack-test\" */ '@/views/GridStackTest.vue')\n  },\n  {\n    path: '*',\n    component: () => import(/* webpackChunkName: \"view-no-route\" */ '@/views/NoRoute.vue')\n  }\n];\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\n\nexport default router;\n","import '@mdi/font/css/materialdesignicons.css' // Ensure you are using css-loader\nimport Vue from 'vue';\nimport Vuetify from 'vuetify/lib';\n\nVue.use(Vuetify);\n\nexport default new Vuetify({\n  icons: {\n    iconfont: 'mdiSvg'\n  }\n});\n","import { defineModule } from 'direct-vuex';\nimport { CommunicationInterfaceConfigurationInfo } from 'visualcal-common/src/bench-configuration';\nimport { CommandParameter, CommandParameterArgument, Instruction, Driver, InstructionSet, Library, StoreDriver, STORE_UPDATED, DriverCategory, DriverVariable } from 'visualcal-common/src/driver-builder';\nimport { moduleActionContext, moduleGetterContext } from './';\nimport { CommunicationInterfaceActionInfo, IpcChannels, QueryStringInfo, Status, WriteInfo } from 'visualcal-common/src/driver-builder';\nimport { generateUuid } from '@/utils/uuid';\nimport Axios from 'axios';\nimport ReconnectingWebSocket from 'reconnecting-websocket';\n\ninterface OldInstructionWithParameters {\n  parameters: CommandParameter[];\n}\n\ninterface OptionalParameters {\n  parameters?: CommandParameter[];\n}\n\ninterface OnlineStore {\n  drivers: StoreDriver[];\n}\n\nexport interface DriverBuilderState {\n  instructions: Instruction[];\n  instructionSets: InstructionSet[];\n  categories: DriverCategory[];\n  drivers: Driver[];\n  currentDriver: Driver;\n  communicationInterfaceInfos: CommunicationInterfaceConfigurationInfo[];\n  selectedCommunicationInterfaceInfo?: CommunicationInterfaceConfigurationInfo;\n  deviceGpibAddress: number;\n  isSelectedCommunicationInterfaceConnected: boolean;\n  onlineStore: OnlineStore;\n}\n\nconst employeesModule = defineModule({\n  // eslint-disable-next-line\n  namespaced: true as true,\n  state: (): DriverBuilderState => {\n    return {\n      instructions: [],\n      instructionSets: [],\n      categories: [],\n      drivers: [],\n      currentDriver: {\n        driverManufacturer: '',\n        driverModel: '',\n        driverNomenclature: '',\n        terminator: 'Lf',\n        instructionSets: [],\n        identityQueryCommand: '*IDN?',\n        categories: [],\n        variables: []\n      },\n      communicationInterfaceInfos: [],\n      selectedCommunicationInterfaceInfo: undefined,\n      deviceGpibAddress: 1,\n      isSelectedCommunicationInterfaceConnected: false,\n      onlineStore: {\n        drivers: []\n      }\n    }\n  },\n  getters: {\n    isSelectedInterfaceGpib(...args): boolean {\n      /* eslint-disable @typescript-eslint/no-use-before-define */\n      const { state } = getterContext(args);\n      if (!state.selectedCommunicationInterfaceInfo) return false;\n      return state.selectedCommunicationInterfaceInfo && state.selectedCommunicationInterfaceInfo.type.toLocaleUpperCase().includes('GPIB')\n    },\n    library(...args): Library {\n      /* eslint-disable @typescript-eslint/no-use-before-define */\n      const { state } = getterContext(args);\n      return {\n        drivers: state.drivers,\n        instructionSets: state.instructionSets,\n        instructions: state.instructions,\n        categories: state.categories\n      }\n    }\n  },\n  mutations: {\n    setLibrary(state, value: Library) {\n      value.drivers.forEach(driver => {\n        driver.instructionSets.forEach(instructionSet => {\n          instructionSet.instructions.forEach(instruction => {\n            const oldInstructionWithParameters = (instruction as unknown) as OldInstructionWithParameters;\n            if (oldInstructionWithParameters.parameters) {\n              instruction.postParameters = oldInstructionWithParameters.parameters;\n              delete ((oldInstructionWithParameters as unknown) as OptionalParameters).parameters;\n            }\n          });\n        });\n      });\n      state.drivers = value.drivers;\n      state.instructionSets = value.instructionSets;\n      state.instructions = value.instructions;\n      state.categories = value.categories;\n    },\n    setInstructions(state, value: Instruction[]) {\n      state.instructions = value;\n    },\n    setCurrentDriver(state, value: Driver) {\n      const driverString = JSON.stringify(value);\n      const driver = JSON.parse(driverString) as Driver;\n      state.currentDriver.instructionSets = [];\n      state.currentDriver = driver;\n    },\n    setManufacturer(state, value: string) {\n      state.currentDriver.driverManufacturer = value;\n    },\n    setModel(state, value: string) {\n      state.currentDriver.driverModel = value;\n    },\n    setNomenclature(state, value: string) {\n      state.currentDriver.driverNomenclature = value;\n    },\n    setIdentityQueryCommand(state, value?: string) {\n      state.currentDriver.identityQueryCommand = value;\n    },\n    setTerminator(state, value: string) {\n      state.currentDriver.terminator = value;\n    },\n    setInstructionSets(state, value: InstructionSet[]) {\n      state.currentDriver.instructionSets = value;\n    },\n    addDriverInstructionSet(state, instructionSet?: InstructionSet) {\n      if (instructionSet) {\n        const newInstructionSet = { ...instructionSet };\n        state.currentDriver.instructionSets.push(newInstructionSet);\n      } else {\n        state.currentDriver.instructionSets.push({\n          _id: generateUuid(),\n          name: 'New Instruction Set',\n          instructions: []\n        });\n      }\n    },\n    removeDriverInstructionSet(state, id: string) {\n      const setIndex = state.currentDriver.instructionSets.findIndex(i => i._id === id);\n      if (setIndex < 0) return;\n      state.currentDriver.instructionSets.splice(setIndex, 1);\n    },\n    addNewDriverInstructionToSet(state, opts: { instructionSetId: string, newInstruction: Instruction }) {\n      const instructionSet = state.currentDriver.instructionSets.find(i => i._id === opts.instructionSetId);\n      if (!instructionSet) return;\n      instructionSet.instructions.push({ ...opts.newInstruction });\n    },\n    updateDriverInstructionFromInstructionSet(state,  opts: { instructionSetId: string, instruction: Instruction }) {\n      const instructionSet = state.currentDriver.instructionSets.find(i => i._id === opts.instructionSetId);\n      if (!instructionSet) return;\n      const instructionIndex = instructionSet.instructions.findIndex(i => i._id === opts.instruction._id);\n      if (instructionIndex <= -1) return;\n      instructionSet.instructions.splice(instructionIndex, 1, { ...opts.instruction });\n    },\n    removeDriverInstructionFromInstructionSet(state, opts: { instructionSetId: string, instructionId: string }) {\n      const instructionSet = state.currentDriver.instructionSets.find(i => i._id === opts.instructionSetId);\n      if (!instructionSet) return;\n      const instructionIndex = instructionSet.instructions.findIndex(i => i._id === opts.instructionId);\n      if (instructionIndex <= -1) return;\n      instructionSet.instructions.splice(instructionIndex, 1);\n    },\n    setDriverInstructionSetInstructionCommandPreParameters(state, opts: { instructionSetId: string, instruction: Instruction, parameters?: CommandParameter[] }) {\n      const instructionSet = state.currentDriver.instructionSets.find(i => i._id === opts.instructionSetId);\n      if (!instructionSet) return;\n      const instructionIndex = instructionSet.instructions.findIndex(i => i._id === opts.instruction._id);\n      if (instructionIndex <= -1) return;\n      const instruction = instructionSet.instructions[instructionIndex];\n      opts.parameters && opts.parameters.length > 0 ? instruction.preParameters = opts.parameters : instruction.preParameters = undefined;\n      instructionSet.instructions.splice(instructionIndex, 1, { ...instruction });\n    },\n    setDriverInstructionSetInstructionCommandPostParameters(state, opts: { instructionSetId: string, instruction: Instruction, parameters?: CommandParameter[] }) {\n      const instructionSet = state.currentDriver.instructionSets.find(i => i._id === opts.instructionSetId);\n      if (!instructionSet) return;\n      const instructionIndex = instructionSet.instructions.findIndex(i => i._id === opts.instruction._id);\n      if (instructionIndex <= -1) return;\n      const instruction = instructionSet.instructions[instructionIndex];\n      opts.parameters && opts.parameters.length > 0 ? instruction.postParameters = opts.parameters : instruction.postParameters = undefined;\n      instructionSet.instructions.splice(instructionIndex, 1, { ...instruction });\n    },\n    setInstructionSetInstructionsOrder(state, opts: { instructionSetId: string, instructions: Instruction[] }) {\n      const instructionSet = state.currentDriver.instructionSets.find(i => i._id === opts.instructionSetId);\n      if (!instructionSet) return;\n      instructionSet.instructions = opts.instructions;\n    },\n    renameInstructionSet(state, opts: { _id: string, oldName: string, newName: string }) {\n      const instructionSet = state.currentDriver.instructionSets.find(i => i._id === opts._id);\n      if (!instructionSet) return;\n      instructionSet.name = opts.newName;\n    },\n    setCommunicationInterfaceInfos(state, value: CommunicationInterfaceConfigurationInfo[]) {\n      state.communicationInterfaceInfos = value;\n    },\n    setSelectedCommunicationInterfaceInfo(state, value?: CommunicationInterfaceConfigurationInfo) {\n      state.selectedCommunicationInterfaceInfo = value;\n    },\n    setDeviceGpibAddress(state, value: number) {\n      if (value < 1) value = 1;\n      if (value > 31) value = 31;\n      state.deviceGpibAddress = value;\n    },\n    setIsSelectedCommunicationInterfaceConnected(state, value: boolean) {\n      state.isSelectedCommunicationInterfaceConnected = value;\n    },\n    saveInstructionSetToLibrary(state, value: InstructionSet) {\n      const existingInstructionSetIndex = state.instructionSets.findIndex(i => i._id === value._id);\n      if (existingInstructionSetIndex > -1) {\n        state.instructionSets[existingInstructionSetIndex] = value;\n      } else {\n        state.instructionSets.push(value);\n      }\n    },\n    removeInstructionSetFromLibrary(state, value: InstructionSet) {\n      const existingInstructionSetIndex = state.instructionSets.findIndex(i => i._id === value._id);\n      if (existingInstructionSetIndex <= -1) return;\n      state.instructionSets.splice(existingInstructionSetIndex, 1);\n    },\n    removeDriverFromLibrary(state, value: Driver) {\n      const existingDriverIndex = state.drivers.findIndex(i => i.driverManufacturer === value.driverManufacturer && i.driverModel === value.driverModel && i.driverNomenclature === value.driverNomenclature);\n      if (existingDriverIndex <= -1) return;\n      state.drivers.splice(existingDriverIndex, 1);\n    },\n    addOrReplaceDriverInLibrary(state, value: Driver) {\n      const existingDriverIndex = state.drivers.findIndex(i => i.driverManufacturer === value.driverManufacturer && i.driverModel === value.driverModel && i.driverNomenclature === value.driverNomenclature);\n      if (existingDriverIndex > -1) {\n        state.drivers[existingDriverIndex] = { ...value };\n      } else {\n        state.drivers.push({ ...value });\n      }\n    },\n    setOnlineStore(state, value: OnlineStore) {\n      state.onlineStore = value;\n    },\n    setCurrentDriverCategories(state, value?: string[]) {\n      state.currentDriver.categories = value;\n    },\n    clearCurrentDriver(state) {\n      state.currentDriver = {\n        driverManufacturer: '',\n        driverModel: '',\n        driverNomenclature: '',\n        terminator: 'Lf',\n        instructionSets: [],\n        identityQueryCommand: '*IDN?',\n        categories: [],\n        variables: []\n      }\n    },\n    setCurrentDriverVariables(state, value?: DriverVariable[]) {\n      state.currentDriver.variables = value;\n    }\n  },\n  actions: {\n    async init(context) {\n      const { commit, dispatch } = actionContext(context);\n      window.electron.ipcRenderer.on(IpcChannels.communicationInterface.disconnect.response, () => commit.setIsSelectedCommunicationInterfaceConnected(false));\n      window.electron.ipcRenderer.on(IpcChannels.communicationInterface.disconnect.error, (_, error: Error) => alert(error.message));\n\n      await dispatch.refreshCommunicationInterfaceInfos();\n      await dispatch.initCommunicationInterfaces();\n\n      await dispatch.refreshLibrary();\n\n      await dispatch.initSocketIo();\n    },\n    async refreshLibrary(context) {\n      const { commit } = actionContext(context);\n      return new Promise<void>((resolve) => {\n        window.electron.ipcRenderer.once(IpcChannels.communicationInterface.getLibrary.response, (_, library: Library) => {\n          commit.setLibrary(library);\n          return resolve();\n        });\n        window.electron.ipcRenderer.send(IpcChannels.communicationInterface.getLibrary.request);\n      });\n    },\n    async initSocketIo(context) {\n      const { dispatch } = actionContext(context);\n      let pingTimer: NodeJS.Timeout | null = null;\n      const storeSocket = new ReconnectingWebSocket('wss://visualcalstore.scottpage.us', [], {\n        connectionTimeout: 20000,\n        maxRetries: Infinity,\n        startClosed: false\n      });\n      storeSocket.onopen = () => {\n        pingTimer = setInterval(() => {\n          if (storeSocket) {\n            storeSocket.send('PING');\n          }\n        }, 30000);\n      };\n      storeSocket.onclose = () => {\n        if (pingTimer) clearInterval(pingTimer);\n        pingTimer = null;\n      };\n      storeSocket.onerror = (err) => console.info('Store WebSocket error: ', err);\n      storeSocket.onmessage = async (ev) => {\n        if (typeof ev.data === 'string' && ev.data === STORE_UPDATED) {\n          await dispatch.refreshOnlineStore();\n        }\n      }\n    },\n    async initCommunicationInterfaces(context) {\n      const { state, commit } = actionContext(context);\n      return new Promise<void>((resolve) => {\n        window.electron.ipcRenderer.once(IpcChannels.communicationInterface.getStatus.response, (_, status: Status) => {\n          commit.setIsSelectedCommunicationInterfaceConnected(status.isConnected);\n          if (status.communicationInterfaceName) {\n            const selectedCommunicationInterfaceInfo = state.communicationInterfaceInfos.find(c => c.name === status.communicationInterfaceName);\n            if (selectedCommunicationInterfaceInfo) commit.setSelectedCommunicationInterfaceInfo(selectedCommunicationInterfaceInfo);\n          }\n          return resolve();\n        });\n        window.electron.ipcRenderer.send(IpcChannels.communicationInterface.getStatus.request);\n      });\n    },\n    async refreshCommunicationInterfaceInfos(context) {\n      const { commit } = actionContext(context);\n      const currentUser = await window.ipc.getCurrentUser();\n      if (!currentUser) return;\n      const viewInfo = await window.ipc.getViewInfo();\n      if (!viewInfo || !viewInfo.session.configuration || !viewInfo.session.configuration.benchConfigName) return;\n      const benchConfig = currentUser.benchConfigs.find(b => {\n        if (!viewInfo || !viewInfo.session.configuration || !viewInfo.session.configuration.benchConfigName) return;\n        return b.name === viewInfo.session.configuration.benchConfigName;\n      });\n      if (!benchConfig) return;\n      commit.setCommunicationInterfaceInfos(benchConfig.interfaces);\n      if (benchConfig.interfaces.length <= 0) return;\n      commit.setSelectedCommunicationInterfaceInfo(benchConfig.interfaces[0]);\n    },\n    async saveLibrary(context) {\n      const { getters } = actionContext(context);\n      return new Promise<void>((resolve, reject) => {\n        window.electron.ipcRenderer.once(IpcChannels.communicationInterface.setLibrary.response, () => {\n          window.electron.ipcRenderer.removeAllListeners(IpcChannels.communicationInterface.setLibrary.error);\n          return resolve();\n        });\n        window.electron.ipcRenderer.once(IpcChannels.communicationInterface.setLibrary.error, (error) => {\n          window.electron.ipcRenderer.removeAllListeners(IpcChannels.communicationInterface.setLibrary.response);\n          return reject(error);\n        });\n        window.electron.ipcRenderer.send(IpcChannels.communicationInterface.setLibrary.request, getters.library);\n      });\n    },\n    async connect(context) {\n      const { state, commit } = actionContext(context);\n      if (!state.selectedCommunicationInterfaceInfo) throw new Error('Selected communication interface info cannot be undefined');\n      window.electron.ipcRenderer.once(IpcChannels.communicationInterface.connect.response, () => {\n        window.electron.ipcRenderer.removeAllListeners(IpcChannels.communicationInterface.connect.error);\n        commit.setIsSelectedCommunicationInterfaceConnected(true);\n      });\n      window.electron.ipcRenderer.once(IpcChannels.communicationInterface.connect.error, (_, error: Error) => {\n        window.electron.ipcRenderer.removeAllListeners(IpcChannels.communicationInterface.connect.response);\n        alert(error.message);\n      });\n      window.electron.ipcRenderer.send(IpcChannels.communicationInterface.connect.request, state.selectedCommunicationInterfaceInfo);\n    },\n    async disconnect() {\n      window.electron.ipcRenderer.send(IpcChannels.communicationInterface.disconnect.request);\n    },\n    async write(context, opts: { instruction: Instruction, parameterArguments?: CommandParameterArgument[] }) {\n      const { getters, state } = actionContext(context);\n      return new Promise<string>((resolve, reject) => {\n        let command = opts.instruction.command;\n        if (opts.parameterArguments) {\n          for (const argument of opts.parameterArguments) {\n            command = `${command}${argument.parameter.beforeText ? argument.parameter.beforeText : ''}${argument.value}${argument.parameter.afterText ? argument.parameter.afterText : ''}`;\n          }\n        }\n        const info: WriteInfo = {\n          data: new TextEncoder().encode(command),\n          deviceGpibAddress: getters.isSelectedInterfaceGpib ? state.deviceGpibAddress : undefined,\n          terminator: state.currentDriver.terminator\n        };\n        window.electron.ipcRenderer.once(IpcChannels.communicationInterface.write.error, (_, error: Error) => {\n          window.electron.ipcRenderer.removeAllListeners(IpcChannels.communicationInterface.write.response);\n          return reject(error);\n        });\n        window.electron.ipcRenderer.once(IpcChannels.communicationInterface.write.response, () => {\n          window.electron.ipcRenderer.removeAllListeners(IpcChannels.communicationInterface.write.error);\n          return resolve(command);\n        });\n        window.electron.ipcRenderer.send(IpcChannels.communicationInterface.write.request, info);\n      });\n    },\n    async read(context) {\n      const { getters, state } = actionContext(context);\n      const info: CommunicationInterfaceActionInfo = {\n        deviceGpibAddress: getters.isSelectedInterfaceGpib ? state.deviceGpibAddress : undefined,\n        terminator: state.currentDriver.terminator\n      };\n      return new Promise<ArrayBufferLike>((resolve, reject) => {\n        window.electron.ipcRenderer.once(IpcChannels.communicationInterface.read.response, (_, data: ArrayBufferLike) => {\n          window.electron.ipcRenderer.removeAllListeners(IpcChannels.communicationInterface.read.error);\n          return resolve((data));\n        });\n        window.electron.ipcRenderer.once(IpcChannels.communicationInterface.read.error, (_, error: Error) => {\n          window.electron.ipcRenderer.removeAllListeners(IpcChannels.communicationInterface.read.response);\n          return reject(error);\n        });\n        window.electron.ipcRenderer.send(IpcChannels.communicationInterface.read.request, info);\n      });\n    },\n    async queryString(context, opts: { instruction: Instruction, parameterArguments?: CommandParameterArgument[] }) {\n      const { getters, state } = actionContext(context);\n      return new Promise<string>((resolve, reject) => {\n        let command = opts.instruction.command;\n        if (opts.parameterArguments) {\n          for (const argument of opts.parameterArguments) {\n            command = `${command}${argument.parameter.beforeText ? argument.parameter.beforeText : ''}${argument.value}${argument.parameter.afterText ? argument.parameter.afterText : ''}`;\n          }\n        }\n        const info: QueryStringInfo = {\n          data: command,\n          deviceGpibAddress: getters.isSelectedInterfaceGpib ? state.deviceGpibAddress : undefined,\n          terminator: state.currentDriver.terminator\n        };\n        window.electron.ipcRenderer.once(IpcChannels.communicationInterface.queryString.response, (_, data: string) => {\n          window.electron.ipcRenderer.removeAllListeners(IpcChannels.communicationInterface.queryString.error);\n          return resolve(data);\n        });\n        window.electron.ipcRenderer.once(IpcChannels.communicationInterface.queryString.error, (_, error: Error) => {\n          window.electron.ipcRenderer.removeAllListeners(IpcChannels.communicationInterface.queryString.response);\n          return reject(error);\n        });\n        window.electron.ipcRenderer.send(IpcChannels.communicationInterface.queryString.request, info);\n      });\n    },\n    async saveCurrentDriver(context) {\n      const { state, commit } = actionContext(context);\n      return new Promise<void>((resolve, reject) => {\n        window.electron.ipcRenderer.once(IpcChannels.communicationInterface.saveDriver.response, () => {\n          window.electron.ipcRenderer.removeAllListeners(IpcChannels.communicationInterface.saveDriver.error);\n          commit.addOrReplaceDriverInLibrary(state.currentDriver);\n          return resolve();\n        });\n        window.electron.ipcRenderer.once(IpcChannels.communicationInterface.saveDriver.error, (_, error: Error) => {\n          window.electron.ipcRenderer.removeAllListeners(IpcChannels.communicationInterface.saveDriver.response);\n          return reject(error);\n        });\n        window.electron.ipcRenderer.send(IpcChannels.communicationInterface.saveDriver.request, state.currentDriver);\n      });\n    },\n    async refreshOnlineStore(context) {\n      const { commit } = actionContext(context);\n      const response = await Axios.get<StoreDriver[]>('https://visualcalstore.scottpage.us/drivers', { timeout: 10000 });\n      const drivers = response.data;\n      commit.setOnlineStore({ drivers });\n    },\n    async saveDriverToStore(_, driver: Driver) {\n      await Axios.post<StoreDriver>('https://visualcalstore.scottpage.us/drivers', driver, { timeout: 10000 });\n    }\n  }\n});\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n// eslint-disable-next-line\nconst getterContext = (args: [any, any, any, any]) => moduleGetterContext(args, employeesModule);\nconst actionContext = (context: any) => moduleActionContext(context, employeesModule);\nexport default employeesModule;\n","export const isDev = () => process.env.NODE_ENV !== 'production';\n","import Vue from 'vue';\nimport Vuex from 'vuex';\nimport { createDirectStore } from 'direct-vuex';\nimport Vuetify from '@/plugins/vuetify';\nimport { User, ViewInfo } from '../types/session';\nimport { SessionViewRequestResponseInfo, ProcedureSection, ProcedureAction } from 'visualcal-common/dist/session-view-info';\nimport { LoginCredentials } from 'visualcal-common/dist/user';\nimport DriverBuilderModule from './driver-builder';\nimport { isDev } from '@/utils';\n\ninterface State {\n  darkMode: boolean;\n  user: User | null;\n  viewInfo: ViewInfo | null;\n  activeSessionName?: string;\n  sessionViewInfo: SessionViewRequestResponseInfo | null;\n  selectedSection: ProcedureSection | null;\n  selectedAction: ProcedureAction | null;\n}\n\nVue.use(Vuex);\n\nconst {\n  store,\n  rootActionContext,\n  moduleActionContext,\n  rootGetterContext,\n  moduleGetterContext\n} = createDirectStore({\n  strict: isDev(),\n  modules: {\n    driverBuilder: DriverBuilderModule\n  },\n  state: (): State => {\n    return {\n      darkMode: false,\n      user: null,\n      viewInfo: null,\n      sessionViewInfo: null,\n      selectedSection: null,\n      selectedAction: null\n    }\n  },\n  getters: {\n    darkMode: (state) => state.darkMode,\n    user: (state): User | null => (state.viewInfo && state.viewInfo.user) ? state.viewInfo.user : null,\n    isLoggedIn: (state) => state.user !== null,\n    sessions: (state) => (state.viewInfo && state.viewInfo.user) ? state.viewInfo.user.sessions : [],\n    activeSession: (state) => (state.viewInfo && state.viewInfo.session) ? state.viewInfo.session : null,\n    activeBenchConfig: (state) => (state.viewInfo && state.viewInfo.benchConfig) ? state.viewInfo.benchConfig : null\n  },\n  mutations: {\n    setDarkMode(state, value: boolean) {\n      state.darkMode = value;\n      Vuetify.framework.theme ? Vuetify.framework.theme.dark = value : Vuetify.userPreset.theme = { dark: value };\n    },\n    setUser(state, value: User | null) {\n      state.user = value;\n    },\n    setViewInfo(state, value: ViewInfo | null) {\n      state.viewInfo = value;\n    },\n    setSessionViewInfo(state, value: SessionViewRequestResponseInfo | null) {\n      state.sessionViewInfo = value;\n      if (!value || !value.procedure || value.procedure.sections.length <= 0) return;\n      const firstSection = value.procedure.sections[0];\n      state.selectedSection = firstSection;\n      if (firstSection.actions.length <= 0) return;\n      state.selectedAction = firstSection.actions[0];\n    },\n    setSelectedSection(state, value: ProcedureSection | null) {\n      state.selectedSection = value;\n    },\n    setSelectedAction(state, value: ProcedureAction | null) {\n      state.selectedAction = value;\n    }\n  },\n  actions: {\n    async refreshViewInfo(context) {\n      const { commit } = rootActionContext(context);\n      const info = await window.ipc.getViewInfo();\n      commit.setViewInfo(info);\n    },\n    async refreshSessionViewInfo(context) {\n      const { commit } = rootActionContext(context);\n      const info = await window.ipc.getSessionViewInfo();\n      commit.setSessionViewInfo(info);\n    },\n    async login(context, credentials: LoginCredentials) {\n      const { commit } = rootActionContext(context);\n      const user = await window.ipc.login(credentials);\n      commit.setUser(user);\n    }\n  }\n})\n \n// Export the direct-store instead of the classic Vuex store.\nexport default store;\n \n// The following exports will be used to enable types in the\n// implementation of actions and getters.\nexport {\n  rootActionContext,\n  moduleActionContext,\n  rootGetterContext,\n  moduleGetterContext\n};\n \n// The following lines enable types in the injected store '$store'.\nexport type AppStore = typeof store;\ndeclare module 'vuex' {\n  // eslint-disable-next-line\n  interface Store<S> {\n    direct: AppStore;\n  }\n}\n","import { TypedEmitter } from 'tiny-typed-emitter';\nimport { User, ViewInfo } from '../types/session';\nimport { IpcChannels as SessionViewIpcChannels, SessionViewRequestResponseInfo, Procedure, Session } from 'visualcal-common/src/session-view-info';\nimport { IpcChannels as LoginIpcChannels, LoginCredentials } from 'visualcal-common/src/user';\nimport { ProcedureForCreate } from 'visualcal-common/src/procedure';\nimport { SessionForCreate } from 'visualcal-common/src/session';\nimport { IpcChannels as AutoUpdateIpcChannels, ProgressInfo, UpdateInfo } from 'visualcal-common/src/auto-update';\nimport { BenchConfig, IpcChannels as BenchConfigIpcChannels } from 'visualcal-common/src/bench-configuration';\nimport { IpcChannels as ResultIpcChannels, LogicRun } from 'visualcal-common/src/result';\nimport { PortInfo } from 'serialport';\n\ninterface AutoUpdateEvents {\n  updateError: (error: Error) => void;\n  checkingForUpdatesStarted: () => void;\n  updateAvailable: (info: UpdateInfo) => void;\n  updateNotAvailable: (info: UpdateInfo) => void;\n  downloadProgressChanged: (progress: ProgressInfo) => void;\n  updateDownloaded: (info: UpdateInfo) => void;\n}\n\ninterface Events extends AutoUpdateEvents {\n  error: (error: Error) => void;\n}\n\nexport class Ipc extends TypedEmitter<Events> {\n\n  constructor() {\n    super();\n  }\n\n  private get ipcRenderer() {\n    return window.electron.ipcRenderer;\n  }\n\n  send(channel: string, ...args: unknown[]) {\n    this.ipcRenderer.send(channel, ...args);\n  }\n\n  request<TReturn, TError>(requestChannel: string, responseChannel: string, errorChannel: string, ...args: unknown[]) {\n    return new Promise<TReturn>((resolve, reject) => {\n      this.ipcRenderer.once(errorChannel, (_, err: TError) => {\n        return reject(err);\n      });\n      this.ipcRenderer.once(responseChannel, (_, response: TReturn) => {\n        return resolve(response);\n      });\n      this.send(requestChannel, ...args);\n    });\n  }\n\n  async getViewInfo() {\n    return await this.request<ViewInfo | null, string>('session-view-info-request', 'session-view-info-response', 'session-view-info-error');\n  }\n\n  async login(credentials: LoginCredentials) {\n    console.info(this);\n    return await this.request<User, string>(LoginIpcChannels.Request, LoginIpcChannels.Response, LoginIpcChannels.Error, credentials);\n  }\n\n  async getCurrentUser() {\n    return await this.request<User | null, Error>('user-active-request', 'user-active-response', 'user-active-error');\n  }\n\n  async getProcedures() {\n    return await this.request<Procedure[], string>('getAll-procedures-request', 'getAll-procedures-response', 'getAll-procedures-error');\n  }\n\n  async getProcedureExists(procedureName: string) {\n    return await this.request<boolean, string>('get-exists-procedure-request', 'get-exists-procedure-response', 'get-exists-procedure-error', procedureName);\n  }\n\n  async getActiveProcedureName() {\n    return await this.request<string, string>('get-active-procedure-request', 'get-active-procedure-response', 'get-active-procedure-error');\n  }\n\n  async setActiveProcedure(procedureName: string) {\n    return await this.request<Procedure, string>('set-active-procedure-request', 'set-active-procedure-response', 'set-active-procedure-error', procedureName);\n  }\n\n  async createProcedure(procedure: ProcedureForCreate) {\n    return await this.request<Procedure, string>('create-procedure-request', 'create-procedure-response', 'create-procedure-error', procedure);\n  }\n\n  async getSessions() {\n    return await this.request<Session[], string>('session-get-all-for-active-user-request', 'session-get-all-for-active-user-response', 'session-get-all-for-active-user-error');\n  }\n\n  async getSessionExists(email: string, sessionName: string) {\n    return await this.request<boolean, string>('get-exists-session-request', 'get-exists-session-response', 'get-exists-session-error', { email: email, sessionName: sessionName });\n  }\n\n  async setActiveSession(sessionName: string) {\n    return await this.request<Session, string>('session-set-active-request', 'session-set-active-response', 'session-set-active-error', sessionName);\n  }\n\n  async createSession(session: SessionForCreate) {\n    return await this.request<Session, string>('create-session-request', 'create-session-response', 'create-session-error', session);\n  }\n\n  async getSessionViewInfo() {\n    return await this.request<SessionViewRequestResponseInfo | null, string>(SessionViewIpcChannels.Request, SessionViewIpcChannels.Response, SessionViewIpcChannels.Error);\n  }\n\n  async getSerialPorts() {\n    return await this.request<PortInfo[], Error>(BenchConfigIpcChannels.GetSerialPortsRequest, BenchConfigIpcChannels.GetSerialPortsResponse, BenchConfigIpcChannels.GetSerialPortsError);\n  }\n\n  async saveBenchConfigurationsForCurrentUser(configs: BenchConfig[]) {\n    return await this.request<boolean, Error>(BenchConfigIpcChannels.SaveConfigsForCurrentUserRequest, BenchConfigIpcChannels.SaveConfigsForCurrentUserResponse, BenchConfigIpcChannels.SaveConfigsForCurrentUserError, configs);\n  }\n\n  async getRunsForCurrentSession() {\n    return await this.request<LogicRun<string, number>[], Error>(ResultIpcChannels.getAllBasicInfosForCurrentSession.request, ResultIpcChannels.getAllBasicInfosForCurrentSession.response, ResultIpcChannels.getAllBasicInfosForCurrentSession.error);\n  }\n\n  listenForAutoUpdateEvents() {\n    if (!window.electron) return;\n    window.electron.ipcRenderer.on(AutoUpdateIpcChannels.DownloadProgressChanged, (_, progress: ProgressInfo) => this.emit('downloadProgressChanged', progress));\n    window.electron.ipcRenderer.on(AutoUpdateIpcChannels.Error, (_, err: Error) => this.emit('error', err));\n    window.electron.ipcRenderer.on(AutoUpdateIpcChannels.StartedChecking, () => this.emit('checkingForUpdatesStarted'));\n    window.electron.ipcRenderer.on(AutoUpdateIpcChannels.UpdateAvailable, (_, info: UpdateInfo) => this.emit('updateAvailable', info));\n    window.electron.ipcRenderer.on(AutoUpdateIpcChannels.UpdateDownloaded, (_, info: UpdateInfo) => this.emit('updateDownloaded', info));\n    window.electron.ipcRenderer.on(AutoUpdateIpcChannels.UpdateNotAvailable, (_, info: UpdateInfo) => this.emit('updateNotAvailable', info));\n  }\n\n  removeAutoUpdateEventListeners() {\n    if (!window.electron) return;\n    window.electron.ipcRenderer.removeAllListeners(AutoUpdateIpcChannels.DownloadProgressChanged);\n    window.electron.ipcRenderer.removeAllListeners(AutoUpdateIpcChannels.Error);\n    window.electron.ipcRenderer.removeAllListeners(AutoUpdateIpcChannels.StartedChecking);\n    window.electron.ipcRenderer.removeAllListeners(AutoUpdateIpcChannels.UpdateAvailable);\n    window.electron.ipcRenderer.removeAllListeners(AutoUpdateIpcChannels.UpdateDownloaded);\n    window.electron.ipcRenderer.removeAllListeners(AutoUpdateIpcChannels.UpdateNotAvailable);\n  }\n\n}\n","import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport vuetify from './plugins/vuetify';\nimport { Ipc } from './utils/Ipc';\nimport VueDebounce from 'vue-debounce';\nimport axios from 'axios';\nimport VueAxios from 'vue-axios';\n\nVue.config.productionTip = false;\n\nwindow.ipc = new Ipc();\nVue.use(VueDebounce);\n\nVue.use(VueAxios, axios);\n\nconst app = new Vue({\n  router,\n  store: store.original,\n  vuetify,\n  render: h => h(App)\n}).$mount('#app');\n\nwindow.app = app;\n\nexport default app;\n","// eslint-disable-next-line\nexport const enum IpcChannels {\n  Error = 'auto-update-error',\n  StartedChecking = 'auto-update-started-checking',\n  UpdateAvailable = 'auto-update-available',\n  UpdateNotAvailable = 'auto-update-not-available',\n  DownloadProgressChanged = 'auto-update-download-progress-changed',\n  UpdateDownloaded = 'auto-update-downloaded',\n  DownloadAndInstallRequest = 'auto-update-download-and-install-request',\n  CancelRequest = 'auto-update-download-and-install-cancel-request'\n}\n\nexport interface AutoUpdateEvents {\n  error: (error: Error) => void;\n  updateError: (error: Error) => void;\n  checkingForUpdatesStarted: () => void;\n  updateAvailable: (info: UpdateInfo) => void;\n  updateNotAvailable: (info: UpdateInfo) => void;\n  downloadProgressChanged: (progress: ProgressInfo) => void;\n  updateDownloaded: (info: UpdateInfo) => void;\n}\n\nexport interface ProgressInfo {\n  total: number;\n  delta: number;\n  transferred: number;\n  percent: number;\n  bytesPerSecond: number;\n}\n\nexport interface ReleaseNoteInfo {\n  /**\n   * The version.\n   */\n  readonly version: string;\n  /**\n   * The note.\n   */\n  readonly note: string | null;\n}\n\nexport interface BlockMapDataHolder {\n  /**\n   * The file size. Used to verify downloaded size (save one HTTP request to get length).\n   * Also used when block map data is embedded into the file (appimage, windows web installer package).\n   */\n  size?: number;\n  /**\n   * The block map file size. Used when block map data is embedded into the file (appimage, windows web installer package).\n   * This information can be obtained from the file itself, but it requires additional HTTP request,\n   * so, to reduce request count, block map size is specified in the update metadata too.\n   */\n  blockMapSize?: number;\n  /**\n   * The file checksum.\n   */\n  readonly sha512: string;\n  readonly isAdminRightsRequired?: boolean;\n}\n\nexport interface UpdateFileInfo extends BlockMapDataHolder {\n  url: string;\n}\n\nexport interface UpdateInfo {\n  /**\n   * The version.\n   */\n  readonly version: string;\n  readonly files: Array<UpdateFileInfo>;\n  /** @deprecated */\n  readonly path: string;\n  /** @deprecated */\n  readonly sha512: string;\n  /**\n   * The release name.\n   */\n  releaseName?: string | null;\n  /**\n   * The release notes. List if `updater.fullChangelog` is set to `true`, `string` otherwise.\n   */\n  releaseNotes?: string | Array<ReleaseNoteInfo> | null;\n  /**\n   * The release date.\n   */\n  releaseDate: string;\n  /**\n   * The [staged rollout](/auto-update#staged-rollouts) percentage, 0-100.\n   */\n  readonly stagingPercentage?: number;\n}\n"],"sourceRoot":""}