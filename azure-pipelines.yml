# Build NodeJS Express app using Azure Pipelines
# https://docs.microsoft.com/azure/devops/pipelines/ecosystems/javascript?view=azure-devops
trigger:
  - master

strategy:
  matrix:
    # linux:
    #   imageName: 'ubuntu-latest'
    mac:
      imageName: 'macos-latest'
    # windows:
    #   imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '14.x'

- task: DownloadSecureFile@1
  name: 'Certificates'
  inputs:
    secureFile: 'Certificates.p12'

- bash: './release.sh'
  displayName: 'Release script'
  env:
    APPLEID: $(APPLEID)
    APPLEIDPASS: $(APPLEIDPASS)
    CSC_LINK: $(Certificates.secureFilePath)


- task: PublishCodeCoverageResults@1
  inputs: 
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'

- task: CopyFiles@2
  displayName: 'Copy Windows files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    Contents: |
      dist/*.exe
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: CopyFiles@2
  displayName: 'Copy Linux files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    Contents: |
      dist/*.snap
      dist/*.AppImage
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: CopyFiles@2
  displayName: 'Copy Mac files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    Contents: |
      dist/*.dmg
      dist/*.dmg.blockmap
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Linux Build Artifacts'
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: 'release'
