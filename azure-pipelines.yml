# Build NodeJS Express app using Azure Pipelines
# https://docs.microsoft.com/azure/devops/pipelines/ecosystems/javascript?view=azure-devops
trigger:
  - master

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
    mac:
      imageName: 'macos-latest'
    windows:
      imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '14.x'

- bash: |
    npm install
    npm build
  workingDirectory: 'renderer'
  displayName: 'Install and build renderer (Vue.js)'

- bash: |
    npm run rebuild
    npm run release
  displayName: 'Install and rebuild Electron app and build release'

- task: CopyFiles@2
  displayName: 'Copy node-red nodes support files to dist'
  inputs:
    Contents: |
      src/nodes/package.json
      src/nodes/*.html
      src/nodes/examples
      src/nodes/icons
      src/nodes/locales
    TargetFolder: 'dist/nodes'

- task: PublishCodeCoverageResults@1
  inputs: 
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'

- task: CopyFiles@2
  displayName: 'Copy Windows files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    Contents: |
      dist/*.exe
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: CopyFiles@2
  displayName: 'Copy Linux files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    Contents: |
      dist/*.snap
      dist/*.AppImage
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: CopyFiles@2
  displayName: 'Copy Mac files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    Contents: |
      dist/*.dmg
      dist/*.dmg.blockmap
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Linux Build Artifacts'
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: 'release'
